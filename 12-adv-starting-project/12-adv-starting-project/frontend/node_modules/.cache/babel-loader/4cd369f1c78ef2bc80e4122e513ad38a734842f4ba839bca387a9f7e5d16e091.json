{"ast":null,"code":"var _jsxFileName = \"/workspaces/react-router-practice/12-adv-starting-project/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  useEffect(() => {\n    // async function fetchEvents( ) {\n    //   setIsLoading(true);\n    //   const response = await fetch('http://localhost:8080/events');\n\n    //   if (!response.ok) {\n    //     setError('Fetching events failed.');\n    //   } else {\n    //     const resData = await response.json();\n    //     setFetchedEvents(resData.events);\n    //   }\n    //   setIsLoading(false);\n    // }\n\n    // fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), \"}\"]\n  }, void 0, true);\n}\n_s(EventsPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","children","events","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/react-router-practice/12-adv-starting-project/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  \n  useEffect(() => {\n    // async function fetchEvents( ) {\n    //   setIsLoading(true);\n    //   const response = await fetch('http://localhost:8080/events');\n\n    //   if (!response.ok) {\n    //     setError('Fetching events failed.');\n    //   } else {\n    //     const resData = await response.json();\n    //     setFetchedEvents(resData.events);\n    //   }\n    //   setIsLoading(false);\n    // }\n\n    // fetchEvents();\n  }, []);\n  return (\n    <>\n      \n    <EventsList events={fetchedEvents} />}\n    </>\n  );\n}\n\nexport default EventsPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpBR,SAAS,CAAC,MAAM;IACd;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EAAA,CACD,EAAE,EAAE,CAAC;EACN,oBACEI,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBAEAL,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KACrC;EAAA,eAAE,CAAC;AAEP;AAACP,EAAA,CAxBQD,UAAU;AAAAS,EAAA,GAAVT,UAAU;AA0BnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}